#Se procede con la carga de los datos
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

excel_file='DatosRiesgoCredito.xlsx'

BDCA=pd.read_excel(excel_file,sheet_name=0)
BDCN=pd.read_excel(excel_file,sheet_name=1)

#Ahora se procede a la selección de los individuos que poseen puntaje
FPA=np.where(~np.isnan(BDCA['Puntaje']))
FPN=np.where(~np.isnan(BDCN['Puntaje']))

BDA=np.array(BDCA.iloc[FPA])
BDN=np.array(BDCN.iloc[FPN])

XP=np.vstack((BDA,BDN))
XP1=np.array([XP[:,1],XP[:,4],XP[:,5],XP[:,6],XP[:,9],XP[:,10],XP[:,12],XP[:,13],XP[:,14],XP[:,21]])
XP2=np.array(XP1.astype(float))
XP2=np.transpose(XP2)
print(XP2)

#Para normalizar los datos de un array por columnas
from sklearn.preprocessing import normalize 
import seaborn as sns

X = normalize(XP2, axis=0, norm='max') 
print(X)
df=pd.DataFrame(X,columns=["Edad","Hijos","PersCargo","Estrato","Ingresos","Egresos","Monto","Plazo","Cuota","Puntaje"])
df.head()
#sns.pairplot(df)
corr=df.corr()
sns.heatmap(corr,cmap='winter')
print(corr)

##################################################
#Se procede con la construcción del modelo ADALINE
##################################################
#0. Se crean los pesos para el modelo neuronal
NE=9; ND=216
C=np.random.random((NE,1))
print(C)

#1. Se cargan los datos para la configuración del modelo
XD=X[:,0:9]
XD.shape
yd=X[:,9]
print(yd[0,])

#2. Se procede con el proceso feedforward
alfa=0.001
ys1=np.zeros((ND,1)); ek=np.zeros((ND,1))

for k in range(216):
  ys1[k,]=np.dot(C.reshape(1,NE),XD[k,:].reshape(NE,1))
  ek[k,]=yd[k,]-ys1[k,]
  C=C+alfa*ek[k,]*XD[k,:].reshape(NE,1)

plt.plot(yd)
plt.plot(ys1)

